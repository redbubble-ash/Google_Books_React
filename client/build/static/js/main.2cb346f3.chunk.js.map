{"version":3,"sources":["components/Header/books.jpg","components/Header/index.js","components/SearchForm/index.js","components/SearchButton/index.js","components/ListResult/index.js","utils/API.js","components/BookSaveBtn/index.js","pages/Books.js","components/DeleteBtn/index.js","pages/Saved.js","pages/NoMatch.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","Nav_default","activeKey","Item","Link","href","style","fontWeight","Jumbotron_default","backgroundImage","concat","Image","backgroundSize","color","textShadow","textAlign","SearchForm","props","Form_default","Group","controlId","Label","Control","Object","assign","size","type","placeholder","SearchButton","Button_default","variant","className","ListResult","ListGroup_default","children","API","getNewBooks","q","axios","get","getSavedBooks","getSavedBook","id","deleteBook","delete","saveBook","bookData","post","BookSaveBtn","Books","state","title","ifResults","results","books","target","message","handleInputChange","event","_event$target","name","value","_this","setState","defineProperty","handleFormSubmit","preventDefault","trim","then","res","console","log","data","items","catch","err","book","filterBooks","filter","_this2","this","components_Header","components_SearchForm","onChange","components_SearchButton","onClick","components_ListResult","map","key","volumeInfo","infoLink","authors","align","paddingRight","src","imageLinks","thumbnail","alt","description","components_BookSaveBtn","btntype","disabled","author","image","smallThumbnail","link","_id","Component","DeleteBtn","Saved","length","components_DeleteBtn","NoMatch","role","aria-label","App","BrowserRouter","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2cb346f3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/books.3ccb3ce4.jpg\";","import React from \"react\";\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Image from \"./books.jpg\"\r\n\r\nfunction Header() {\r\n    return(\r\n        <div>\r\n        <Nav activeKey=\"/books\" >\r\n        <Nav.Item>\r\n            <Nav.Link href=\"/books\" style={{fontWeight: \"bold\"}}>Home</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n            <Nav.Link href=\"/books\" style={{fontWeight: \"bold\"}}>New Search</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n            <Nav.Link href=\"/Saved\" style={{fontWeight: \"bold\"}}>Saved Books</Nav.Link>\r\n        </Nav.Item>\r\n        </Nav>\r\n        <Jumbotron style = {{backgroundImage: `url(${Image})`, backgroundSize: \"contain\"}}>\r\n        <h1 style={{ color: \"white\", textShadow: \"1px 1px 2px black, 0 0 25px blue, 0 0 5px darkblue\", textAlign: \"Center\"}}>React Google Book Search</h1>\r\n        <h4 style={{textAlign: \"Center\", color: \"white\"}}>\r\n        Search for and save books of interest\r\n        </h4>\r\n        </Jumbotron>\r\n        </div>\r\n        );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n\r\nfunction SearchForm(props){\r\n    return(\r\n            <Form>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label style={{fontWeight: \"bold\"}}>Enter Book Title</Form.Label>\r\n                <Form.Control size=\"lg\" type=\"text\" placeholder=\"Search Book Title (requied)\" {...props} />\r\n            </Form.Group>\r\n            </Form>\r\n    )\r\n}\r\n\r\nexport default SearchForm;\r\n","import React from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction SearchButton(props){\r\n    return(\r\n            <Button variant=\"primary\" type=\"submit\" className=\"btn btn-info\" {...props}>\r\n                Submit\r\n            </Button>\r\n    )\r\n}\r\n\r\nexport default SearchButton;\r\n","import React from \"react\";\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\n\r\n\r\n// This component exports both the List and ListItem components\r\n\r\nfunction ListResult(props){\r\n    return(\r\n      <ListGroup>\r\n          <ListGroup.Item>{props.children}</ListGroup.Item>\r\n      </ListGroup>\r\n\r\n    )\r\n}\r\n\r\nexport default ListResult;\r\n\r\n\r\n\r\n// export const List = ({ children }) => (\r\n//   <ul className=\"list-group\">{children}</ul>\r\n// );\r\n\r\n// export function ListItem({ children }) {\r\n//   return <li className=\"list-group-item\">{children}</li>;\r\n// }","import axios from \"axios\";\r\n\r\nexport default {\r\n  // Gets all books\r\n  getNewBooks: function(q) {\r\n    return axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\"+ q);\r\n  },\r\n  // Gets all saved books\r\n  getSavedBooks: function() {\r\n    return axios.get(\"/api/books/\");\r\n  },\r\n  // Gets the saved book with the given id\r\n  getSavedBook: function(id) {\r\n    return axios.get(\"/api/books/\" + id);\r\n  },\r\n  // Deletes the book with the given id\r\n  deleteBook: function(id) {\r\n    return axios.delete(\"/api/books/\" + id);\r\n  },\r\n  // Saves a book to the database\r\n  saveBook: function(bookData) {\r\n    return axios.post(\"/api/books\", bookData);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nfunction BookSaveBtn(props){\r\n    return(\r\n    <Button variant=\"primary\" type=\"submit\" className=\"btn btn-info\" {...props}>\r\n    Save\r\n    </Button>\r\n)\r\n}\r\n\r\nexport default BookSaveBtn;","import React, { Component } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport SearchForm from \"../components/SearchForm\";\r\nimport SearchButton from \"../components/SearchButton\";\r\nimport ListResult from \"../components/ListResult\";\r\nimport API from \"../utils/API\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport BookSaveBtn from \"../components/BookSaveBtn\";\r\n\r\n\r\nclass Books extends Component {\r\n    state = {\r\n        title: \"\",\r\n        ifResults: false,\r\n        results: [],\r\n        books: [],\r\n        target: \"\",\r\n        message: \"Simply search for books via the Google Books API\"\r\n\r\n    }\r\n\r\n    handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n        // if input: \"waterfall\", then the following is {\"name\":\"title\",\"value\":\"Waterfall\"}\r\n          [name]: value\r\n        });\r\n        // console.log('name is:'+ JSON.stringify({ name, value }))\r\n      };\r\n\r\n      handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        if (this.state.title) {\r\n    \r\n          const title = this.state.title.trim();\r\n    \r\n          API.getNewBooks(title)\r\n            .then(res => {\r\n    \r\n              console.log(res.data.items);\r\n              //if input: \"waterfall\", then Title is:Waterfall\r\n              console.log(\"Title is:\" + this.state.title);\r\n\r\n    \r\n              this.setState({\r\n                ifResults: true,\r\n                results: res.data.items\r\n              });\r\n            })\r\n            .catch(err => console.log(err));\r\n        }\r\n      };\r\n\r\n      saveBook = book => {\r\n        API.saveBook(book)\r\n          .then(res => {\r\n            const currentBooks = this.state.books;\r\n            const filterBooks = currentBooks.filter(book => book.id !== res.data.id);\r\n            this.setState({\r\n              books: filterBooks\r\n            });\r\n          })\r\n          .catch(err => console.log(err));\r\n      }\r\n    \r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <div >\r\n                    <Header/>\r\n                    <SearchForm\r\n                    name=\"title\"\r\n                    value={this.state.title}\r\n                    onChange = {this.handleInputChange}\r\n                    />\r\n                    <SearchButton\r\n                    onClick={this.handleFormSubmit}\r\n                    className=\"btn btn-info\"\r\n                    />\r\n                </div>\r\n                <div >\r\n                <div className=\"col-10 col-centered card-content mb-4\">\r\n              {this.state.ifResults ?(\r\n                <div>\r\n                <h1 className=\"heading-title mx-sm-3 mb-2 text-center\">Search Results</h1>\r\n                <ListResult>\r\n                    {this.state.results.map((book)=>(\r\n                        <ListGroup.Item key={book.id}>\r\n                            <div className=\"order-div\">\r\n                                <a \r\n                                href={book.volumeInfo.infoLink}\r\n                                target={this.state.target}\r\n                                >\r\n                                {book.volumeInfo.title}\r\n                                </a>\r\n                                <p>{book.volumeInfo.authors} (Author)</p>\r\n                                <p>\r\n                                <img align=\"left\" style={{paddingRight:10}}\r\n                                    src={book.volumeInfo.imageLinks.thumbnail} alt={book.volumeInfo.title}\r\n                                />\r\n                                    {book.volumeInfo.description}\r\n                                </p>\r\n                            </div>\r\n                            <BookSaveBtn \r\n                             key={book.id}\r\n                             btntype=\"info\"\r\n                             disabled={book.volumeInfo.infoLink === \"/\"}\r\n                             onClick={() => this.saveBook({\r\n                               title: book.volumeInfo.title,\r\n                               author: book.volumeInfo.authors[0],\r\n                               description: book.volumeInfo.description,\r\n                               image: book.volumeInfo.imageLinks.smallThumbnail,\r\n                               link: book.volumeInfo.infoLink,\r\n                               _id: book.id\r\n                             })}\r\n                            />\r\n\r\n                        </ListGroup.Item>\r\n\r\n\r\n                    ))}\r\n                </ListResult>\r\n                </div>\r\n                ) :(\r\n                    <div>\r\n                    </div>\r\n                    \r\n\r\n                )\r\n                }\r\n\r\n                </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Books;\r\n","import React from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nfunction DeleteBtn(props){\r\n    return(\r\n    <Button variant=\"primary\" type=\"submit\" className=\"btn btn-info\" {...props}>\r\n    Delete\r\n    </Button>\r\n)\r\n}\r\n\r\nexport default DeleteBtn;","import React, {Component} from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport SearchForm from \"../components/SearchForm\";\r\nimport SearchButton from \"../components/SearchButton\";\r\nimport ListResult from \"../components/ListResult\";\r\nimport API from \"../utils/API\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport DeleteBtn from \"../components/DeleteBtn\";\r\n\r\n\r\n\r\n\r\nclass Saved extends Component {\r\n\r\n    state = {\r\n        books: [],\r\n        target: \"\",\r\n        ifResults: true\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getSavedBooks();\r\n    }\r\n\r\n    getSavedBooks = () => {\r\n        API.getSavedBooks()\r\n            .then(res => {\r\n                if (res.data.length > 0) {\r\n                    this.setState({\r\n                        books: res.data,\r\n                        target: \"_blank\"\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        ifResults: true\r\n                    });\r\n                }\r\n\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    deleteBook = id => {\r\n        API.deleteBook(id)\r\n            .then(res => this.getSavedBooks())\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            (this.state.ifResults) ? (\r\n                <div className=\"container\">\r\n                        <Header/>\r\n                    <div>\r\n\r\n                    <h1 className=\"heading-title mx-sm-3 mb-2 text-center\">Saved Books</h1>\r\n                    <ListResult>\r\n                    {this.state.books.map((book)=>(\r\n                        <ListGroup.Item key={book.id}>\r\n                            <div className=\"order-div\">\r\n                                <a \r\n                                href={book.link}\r\n                                target={this.state.target}\r\n                                >\r\n                                {book.title}\r\n                                </a>\r\n                                <p>{book.author} (Author)</p>\r\n                                <p>\r\n                                <img align=\"left\" style={{paddingRight:10}}\r\n                                    src={book.image} alt={book.title}\r\n                                />\r\n                                    {book.description}\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"book-btn-div\">\r\n                            <DeleteBtn\r\n                                key={book._id + \"btn\"}\r\n                                btntype=\"info\"\r\n                                id={book._id}\r\n                                disabled={book.link === \"/\"}\r\n                                onClick={() => this.deleteBook(book._id)}\r\n                            />\r\n                            </div>\r\n                        </ListGroup.Item>\r\n\r\n\r\n                    ))}\r\n                </ListResult>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            ):(\r\n                <div className=\"container\">\r\n                    <div >\r\n                        <Header/>\r\n                        <SearchForm\r\n                        name=\"title\"\r\n                        value={this.state.title}\r\n                        onChange = {this.handleInputChange}\r\n                        />\r\n                        <SearchButton\r\n                        onClick={this.handleFormSubmit}\r\n                        className=\"btn btn-info\"\r\n                        />\r\n                    </div>\r\n                    <h3>\r\n                    You have no saved books. Click search bar to find some.\r\n                    </h3>\r\n\r\n                </div>\r\n\r\n\r\n            )\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Saved;","import React from \"react\";\r\n\r\nconst NoMatch = () => (\r\n  <div className=\"container\">\r\n      <h1>404 Page Not Found</h1>\r\n      <h1>\r\n        <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\r\n          🙄\r\n            </span>\r\n      </h1>\r\n  </div>\r\n);\r\n\r\nexport default NoMatch;","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Books from \"./pages/Books\";\r\nimport Saved from \"./pages/Saved\";\r\nimport NoMatch from \"./pages/NoMatch\";\r\n\r\n\r\n\r\n// import Detail from \"./pages/Detail\";\r\n// import NoMatch from \"./pages/NoMatch\";\r\n// import Nav from \"./components/Nav\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Books} />\r\n          <Route exact path=\"/books\" component={Books} />\r\n          <Route exact path=\"/saved\" component={Saved} />\r\n          <Route component={NoMatch} />\r\n        </Switch> \r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}