{"version":3,"sources":["components/Header/books.jpg","components/Header/index.js","components/SearchForm/index.js","components/SearchButton/index.js","components/ListResult/index.js","utils/API.js","components/BookSaveBtn/index.js","pages/Books.js","components/DeleteBtn/index.js","pages/Saved.js","pages/NoMatch.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","Nav_default","activeKey","Item","Link","href","style","fontWeight","Jumbotron_default","backgroundImage","concat","Image","backgroundSize","color","textShadow","textAlign","SearchForm","props","Form_default","Group","controlId","Label","Control","Object","assign","size","type","placeholder","SearchButton","Button_default","variant","className","ListResult","ListGroup_default","children","API","getNewBooks","q","axios","get","getSavedBooks","getSavedBook","id","deleteBook","delete","saveBook","bookData","post","BookSaveBtn","Books","state","title","ifResults","results","books","target","message","handleInputChange","event","_event$target","name","value","_this","setState","defineProperty","handleFormSubmit","preventDefault","trim","then","res","console","log","data","items","catch","err","book","filterBooks","filter","_this2","this","components_Header","components_SearchForm","onChange","components_SearchButton","onClick","components_ListResult","map","key","volumeInfo","infoLink","authors","align","paddingRight","src","imageLinks","thumbnail","alt","description","components_BookSaveBtn","btntype","disabled","author","image","smallThumbnail","link","_id","Component","DeleteBtn","Saved","length","components_DeleteBtn","NoMatch","role","aria-label","App","BrowserRouter","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c2cc35f8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/books.3ccb3ce4.jpg\";","import React from \"react\";\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Nav from 'react-bootstrap/Nav';\nimport Image from \"./books.jpg\"\n\nfunction Header() {\n    return(\n        <div>\n        <Nav activeKey=\"/books\" >\n        <Nav.Item>\n            <Nav.Link href=\"/books\" style={{fontWeight: \"bold\"}}>Home</Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n            <Nav.Link href=\"/books\" style={{fontWeight: \"bold\"}}>New Search</Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n            <Nav.Link href=\"/Saved\" style={{fontWeight: \"bold\"}}>Saved Books</Nav.Link>\n        </Nav.Item>\n        </Nav>\n        <Jumbotron style = {{backgroundImage: `url(${Image})`, backgroundSize: \"contain\"}}>\n        <h1 style={{ color: \"white\", textShadow: \"1px 1px 2px black, 0 0 25px blue, 0 0 5px darkblue\", textAlign: \"Center\"}}>React Google Book Search</h1>\n        <h4 style={{textAlign: \"Center\", color: \"white\"}}>\n        Search for and save books of interest\n        </h4>\n        </Jumbotron>\n        </div>\n        );\n}\n\nexport default Header;\n","import React from \"react\";\nimport Form from 'react-bootstrap/Form';\n\n\nfunction SearchForm(props){\n    return(\n            <Form>\n            <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label style={{fontWeight: \"bold\"}}>Enter Book Title</Form.Label>\n                <Form.Control size=\"lg\" type=\"text\" placeholder=\"Search Book Title (requied)\" {...props} />\n            </Form.Group>\n            </Form>\n    )\n}\n\nexport default SearchForm;\n","import React from \"react\";\nimport Button from 'react-bootstrap/Button';\n\nfunction SearchButton(props){\n    return(\n            <Button variant=\"primary\" type=\"submit\" className=\"btn btn-info\" {...props}>\n                Submit\n            </Button>\n    )\n}\n\nexport default SearchButton;\n","import React from \"react\";\nimport ListGroup from 'react-bootstrap/ListGroup';\n\n\n// This component exports both the List and ListItem components\n\nfunction ListResult(props){\n    return(\n      <ListGroup>\n          <ListGroup.Item>{props.children}</ListGroup.Item>\n      </ListGroup>\n\n    )\n}\n\nexport default ListResult;\n\n\n\n// export const List = ({ children }) => (\n//   <ul className=\"list-group\">{children}</ul>\n// );\n\n// export function ListItem({ children }) {\n//   return <li className=\"list-group-item\">{children}</li>;\n// }","import axios from \"axios\";\n\nexport default {\n  // Gets all books\n  getNewBooks: function(q) {\n    return axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\"+ q);\n  },\n  // Gets all saved books\n  getSavedBooks: function() {\n    return axios.get(\"/api/books/\");\n  },\n  // Gets the saved book with the given id\n  getSavedBook: function(id) {\n    return axios.get(\"/api/books/\" + id);\n  },\n  // Deletes the book with the given id\n  deleteBook: function(id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves a book to the database\n  saveBook: function(bookData) {\n    return axios.post(\"/api/books\", bookData);\n  }\n};\n","import React from \"react\";\nimport Button from 'react-bootstrap/Button';\n\n\nfunction BookSaveBtn(props){\n    return(\n    <Button variant=\"primary\" type=\"submit\" className=\"btn btn-info\" {...props}>\n    Save\n    </Button>\n)\n}\n\nexport default BookSaveBtn;","import React, { Component } from \"react\";\nimport Header from \"../components/Header\";\nimport SearchForm from \"../components/SearchForm\";\nimport SearchButton from \"../components/SearchButton\";\nimport ListResult from \"../components/ListResult\";\nimport API from \"../utils/API\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport BookSaveBtn from \"../components/BookSaveBtn\";\n\n\nclass Books extends Component {\n    state = {\n        title: \"\",\n        ifResults: false,\n        results: [],\n        books: [],\n        target: \"\",\n        message: \"Simply search for books via the Google Books API\"\n\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n        // if input: \"waterfall\", then the following is {\"name\":\"title\",\"value\":\"Waterfall\"}\n          [name]: value\n        });\n        // console.log('name is:'+ JSON.stringify({ name, value }))\n      };\n\n      handleFormSubmit = event => {\n        event.preventDefault();\n        if (this.state.title) {\n    \n          const title = this.state.title.trim();\n    \n          API.getNewBooks(title)\n            .then(res => {\n    \n              console.log(res.data.items);\n              //if input: \"waterfall\", then Title is:Waterfall\n              console.log(\"Title is:\" + this.state.title);\n\n    \n              this.setState({\n                ifResults: true,\n                results: res.data.items\n              });\n            })\n            .catch(err => console.log(err));\n        }\n      };\n\n      saveBook = book => {\n        API.saveBook(book)\n          .then(res => {\n            const currentBooks = this.state.books;\n            const filterBooks = currentBooks.filter(book => book.id !== res.data.id);\n            this.setState({\n              books: filterBooks\n            });\n          })\n          .catch(err => console.log(err));\n      }\n    \n\n\n    render(){\n        return(\n            <div className=\"container\">\n                <div >\n                    <Header/>\n                    <SearchForm\n                    name=\"title\"\n                    value={this.state.title}\n                    onChange = {this.handleInputChange}\n                    />\n                    <SearchButton\n                    onClick={this.handleFormSubmit}\n                    className=\"btn btn-info\"\n                    />\n                </div>\n                <div >\n                <div className=\"col-10 col-centered card-content mb-4\">\n              {this.state.ifResults ?(\n                <div>\n                <h1 className=\"heading-title mx-sm-3 mb-2 text-center\">Search Results</h1>\n                <ListResult>\n                    {this.state.results.map((book)=>(\n                        <ListGroup.Item key={book.id}>\n                            <div className=\"order-div\">\n                                <a \n                                href={book.volumeInfo.infoLink}\n                                target={this.state.target}\n                                >\n                                {book.volumeInfo.title}\n                                </a>\n                                <p>{book.volumeInfo.authors} (Author)</p>\n                                <p>\n                                <img align=\"left\" style={{paddingRight:10}}\n                                    src={book.volumeInfo.imageLinks.thumbnail} alt={book.volumeInfo.title}\n                                />\n                                    {book.volumeInfo.description}\n                                </p>\n                            </div>\n                            <BookSaveBtn \n                             key={book.id}\n                             btntype=\"info\"\n                             disabled={book.volumeInfo.infoLink === \"/\"}\n                             onClick={() => this.saveBook({\n                               title: book.volumeInfo.title,\n                               author: book.volumeInfo.authors[0],\n                               description: book.volumeInfo.description,\n                               image: book.volumeInfo.imageLinks.smallThumbnail,\n                               link: book.volumeInfo.infoLink,\n                               _id: book.id\n                             })}\n                            />\n\n                        </ListGroup.Item>\n\n\n                    ))}\n                </ListResult>\n                </div>\n                ) :(\n                    <div>\n                    </div>\n                    \n\n                )\n                }\n\n                </div>\n                </div>\n\n\n            </div>\n        )\n    }\n\n}\n\nexport default Books;\n","import React from \"react\";\nimport Button from 'react-bootstrap/Button';\n\n\nfunction DeleteBtn(props){\n    return(\n    <Button variant=\"primary\" type=\"submit\" className=\"btn btn-info\" {...props}>\n    Delete\n    </Button>\n)\n}\n\nexport default DeleteBtn;","import React, {Component} from \"react\";\nimport Header from \"../components/Header\";\nimport SearchForm from \"../components/SearchForm\";\nimport SearchButton from \"../components/SearchButton\";\nimport ListResult from \"../components/ListResult\";\nimport API from \"../utils/API\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport DeleteBtn from \"../components/DeleteBtn\";\n\n\n\n\nclass Saved extends Component {\n\n    state = {\n        books: [],\n        target: \"\",\n        ifResults: true\n    };\n\n    componentDidMount() {\n        this.getSavedBooks();\n    }\n\n    getSavedBooks = () => {\n        API.getSavedBooks()\n            .then(res => {\n                if (res.data.length > 0) {\n                    this.setState({\n                        books: res.data,\n                        target: \"_blank\"\n                    });\n                } else {\n                    this.setState({\n                        ifResults: true\n                    });\n                }\n\n            })\n            .catch(err => console.log(err));\n    }\n\n    deleteBook = id => {\n        API.deleteBook(id)\n            .then(res => this.getSavedBooks())\n            .catch(err => console.log(err));\n    }\n\n    render() {\n        return(\n            (this.state.ifResults) ? (\n                <div className=\"container\">\n                        <Header/>\n                    <div>\n\n                    <h1 className=\"heading-title mx-sm-3 mb-2 text-center\">Saved Books</h1>\n                    <ListResult>\n                    {this.state.books.map((book)=>(\n                        <ListGroup.Item key={book.id}>\n                            <div className=\"order-div\">\n                                <a \n                                href={book.link}\n                                target={this.state.target}\n                                >\n                                {book.title}\n                                </a>\n                                <p>{book.author} (Author)</p>\n                                <p>\n                                <img align=\"left\" style={{paddingRight:10}}\n                                    src={book.image} alt={book.title}\n                                />\n                                    {book.description}\n                                </p>\n                            </div>\n                            <div className=\"book-btn-div\">\n                            <DeleteBtn\n                                key={book._id + \"btn\"}\n                                btntype=\"info\"\n                                id={book._id}\n                                disabled={book.link === \"/\"}\n                                onClick={() => this.deleteBook(book._id)}\n                            />\n                            </div>\n                        </ListGroup.Item>\n\n\n                    ))}\n                </ListResult>\n\n\n                    </div>\n                </div>\n\n            ):(\n                <div className=\"container\">\n                    <div >\n                        <Header/>\n                        <SearchForm\n                        name=\"title\"\n                        value={this.state.title}\n                        onChange = {this.handleInputChange}\n                        />\n                        <SearchButton\n                        onClick={this.handleFormSubmit}\n                        className=\"btn btn-info\"\n                        />\n                    </div>\n                    <h3>\n                    You have no saved books. Click search bar to find some.\n                    </h3>\n\n                </div>\n\n\n            )\n\n        )\n    }\n\n}\n\n\nexport default Saved;","import React from \"react\";\n\nconst NoMatch = () => (\n  <div className=\"container\">\n      <h1>404 Page Not Found</h1>\n      <h1>\n        <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n          🙄\n            </span>\n      </h1>\n  </div>\n);\n\nexport default NoMatch;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Books from \"./pages/Books\";\nimport Saved from \"./pages/Saved\";\nimport NoMatch from \"./pages/NoMatch\";\n\n\n\n// import Detail from \"./pages/Detail\";\n// import NoMatch from \"./pages/NoMatch\";\n// import Nav from \"./components/Nav\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={Books} />\n          <Route exact path=\"/books\" component={Books} />\n          <Route exact path=\"/saved\" component={Saved} />\n          <Route component={NoMatch} />\n        </Switch> \n      </div>\n    </Router>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}